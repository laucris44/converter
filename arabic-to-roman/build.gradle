buildscript {
	ext {
		springBootVersion = '2.1.6.RELEASE'
		verifierVersion = '2.1.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.6.RELEASE")
		classpath 'mysql:mysql-connector-java:8.0.12'
	}
}

plugins {
	id 'java-library'
	id "org.sonarqube" version "2.7"
	id 'jacoco'	
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'
apply plugin: 'groovy'



version = '1.0'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

bootJar {
	baseName = 'arabicToRoman'
	version =  '0.1.0'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories { mavenCentral() }

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-jersey')
	implementation('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	
	runtimeOnly('mysql:mysql-connector-java')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	compile("org.springframework.boot:spring-boot-starter-web")
	
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
	testCompile group: 'junit', name: 'junit', version: '4.12'
	testCompile group: 'org.jacoco', name: 'org.jacoco.agent', version: '0.8.1'
	testCompile group: 'com.jayway.restassured', name: 'rest-assured', version: '2.9.0'
	testCompile('org.springframework.cloud:spring-cloud-starter-contract-stub-runner')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.cloud:spring-cloud-starter-contract-verifier')
	
}

sonarqube{
	properties{
		property "sonar.projectName", "arabigos-romanos"
		property "sonar.projectKey", ""
		property "sonar.jacoco.reportPaths", "${project.buildDir}/jacoco/test.exec"
		property 'sonar.coverage.exclusions', "src/main/java/io/quind/data/**"
	}
}

tasks.withType(Test) {
	scanForTestClasses = false
	include "**/*Test.class" // whatever Ant pattern matches your test class files
}

jacoco {
	toolVersion = "0.8.1"
	reportsDir = file("$buildDir/customJacocoReportDir")
}

jacocoTestReport {
	reports {
		xml.enabled false
		csv.enabled false
		html.destination file("${buildDir}/jacocoHtml")
	}
}

test {
	systemProperty "ip", System.getProperty("ip")
	jacoco {
		destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
		classDumpDir = file("$buildDir/jacoco/classpathdumps")
	}

}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.5
			}
		}

		rule {
			enabled = false
			element = 'CLASS'
			includes = ['org.gradle.*']

			limit {
				counter = 'LINE'
				value = 'TOTALCOUNT'
				maximum = 0.3
			}
		}
	}
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:Finchley.SR2"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:Greenwich.SR1"
	}
}